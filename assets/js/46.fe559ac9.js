(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{451:function(t,s,a){"use strict";a.r(s);var e=a(42),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"effective-typescript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#effective-typescript"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://book.douban.com/subject/34893998/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Effective TypeScript"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"getting-to-know-typescript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getting-to-know-typescript"}},[t._v("#")]),t._v(" Getting to Know TypeScript")]),t._v(" "),a("h3",{attrs:{id:"_1-understand-the-relationship-between-typescript-and-javascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-understand-the-relationship-between-typescript-and-javascript"}},[t._v("#")]),t._v(" 1. Understand the Relationship Between TypeScript and JavaScript")]),t._v(" "),a("ul",[a("li",[t._v("TypeScript 是 JavaScript 的超集")]),t._v(" "),a("li",[t._v("TypeScript添加了一个类型系统，该类型系统可对JavaScript的运行时行为进行建模，并尝试发现运行时引发异常的代码")])]),t._v(" "),a("h3",{attrs:{id:"_2-know-which-typescript-options-you-re-using"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-know-which-typescript-options-you-re-using"}},[t._v("#")]),t._v(" 2. Know Which TypeScript Options You're Using")]),t._v(" "),a("p",[t._v("TypeScript提供了可以影响语言层面的配置，比如 noImplicitAny strictNullChecks。显然要选择尽可能严格的配置。")]),t._v(" "),a("h3",{attrs:{id:"_3-understand-that-code-generation-is-independent-of-types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-understand-that-code-generation-is-independent-of-types"}},[t._v("#")]),t._v(" 3. Understand That Code Generation Is Independent of Types")]),t._v(" "),a("p",[t._v("代码生成和类型检查是独立的。")]),t._v(" "),a("ul",[a("li",[t._v("类型报错也可以生成代码")]),t._v(" "),a("li",[t._v("运行时没有TS类型")]),t._v(" "),a("li",[t._v("断言类型不影响运行时类型")]),t._v(" "),a("li",[t._v("运行时类型和声明的类型可能不一致")]),t._v(" "),a("li",[t._v("不支持静态重载，只支持类型签名实现重载")]),t._v(" "),a("li",[t._v("TS类型不影响运行时性能")])]),t._v(" "),a("h3",{attrs:{id:"_4-get-comfortable-with-structural-typing"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-get-comfortable-with-structural-typing"}},[t._v("#")]),t._v(" 4. Get Comfortable with Structural Typing")]),t._v(" "),a("ul",[a("li",[t._v("JS是鸭子类型，TS通过结构化类型对此进行描述。子类型不一定通过extends(继承)实现，只要结构满足依然视为子类型。")]),t._v(" "),a("li",[t._v("TypeScript类型不是“密封的”，一个满足特定interface的值可能会有额外的属性，所以遍历对象很难做到类型正确。")])]),t._v(" "),a("h3",{attrs:{id:"_5-limit-use-of-the-any-type"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-limit-use-of-the-any-type"}},[t._v("#")]),t._v(" 5. Limit Use of the any Type")]),t._v(" "),a("h2",{attrs:{id:"typescript-t-type-system"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#typescript-t-type-system"}},[t._v("#")]),t._v(" TypeScript't Type System")]),t._v(" "),a("h3",{attrs:{id:"_6-use-your-editor-to-interrogate-and-explore-the-type-system"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-use-your-editor-to-interrogate-and-explore-the-type-system"}},[t._v("#")]),t._v(" 6. Use Your Editor to Interrogate and Explore the Type System")]),t._v(" "),a("h3",{attrs:{id:"_7-think-of-types-as-sets-of-values"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-think-of-types-as-sets-of-values"}},[t._v("#")]),t._v(" 7. Think of Types as Sets of Values")]),t._v(" "),a("p",[t._v("把类型当做值的集合思考")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'A'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 单值集合 { 'A' }")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("B")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'B'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 单值集合 { 'B' }")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("AB")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'A'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'B'")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 集合的并集 { 'A', 'B' }")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("twoInt")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 无限元素集合 { 1,2,3,4}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("threeInt")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 无限集合")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("twoIntersectThreeInt")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" twoInt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" threeInt "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 无限集合的交集")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("twoUnionThreeInt")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 无限集合的并集")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("keyof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("B")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("keyof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("keyof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("B")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("keyof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("B")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("keyof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("keyof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("B")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("Typescript术语")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("集合术语")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("never")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("空集")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("literal type")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("单值集合")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("value 可赋值给 T")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("value ∈ T")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("T1 assignable to T2")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("T1是T2的子集")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("T1 extends T2")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("T1是T2的子集")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("T1丨T2")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("T1和T2的并集")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("T1 & T2")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("T1 和T2的交集")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("unknown")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("universal set")])])])]),t._v(" "),a("h3",{attrs:{id:"_8-know-how-to-tell-whether-a-symbol-is-in-the-type-space-or-value-space"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-know-how-to-tell-whether-a-symbol-is-in-the-type-space-or-value-space"}},[t._v("#")]),t._v(" 8. Know How to Tell Whether a Symbol Is in the Type Space or Value Space")]),t._v(" "),a("p",[t._v("TS中一个符号可以属于Type Space或者Value Space，也可以同时处于Type Space和Value Space")]),t._v(" "),a("p",[t._v("class和enum同时存在于Value Space和Type Space。对于class，既可以作为类型，也可以作为构造函数。enum本身就代表了类型，其编译后对应枚举对象(不用const修饰的情况下)")]),t._v(" "),a("p",[t._v("typeof总是对值进行操作，但是在Type Space返回类型，在Value Space返回js的类型。")]),t._v(" "),a("h3",{attrs:{id:"_9-prefer-type-declarations-to-type-assertions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-prefer-type-declarations-to-type-assertions"}},[t._v("#")]),t._v(" 9. Prefer Type Declarations to Type Assertions")]),t._v(" "),a("h3",{attrs:{id:"_10-avoid-object-wrapper-types-string-number-boolean-symbol-bigint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-avoid-object-wrapper-types-string-number-boolean-symbol-bigint"}},[t._v("#")]),t._v(" 10. Avoid Object Wrapper Types(String,Number,Boolean,Symbol,BigInt)")]),t._v(" "),a("h3",{attrs:{id:"_11-recognize-the-limits-of-excess-property-checking"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-recognize-the-limits-of-excess-property-checking"}},[t._v("#")]),t._v(" 11. Recognize the Limits of Excess Property Checking")]),t._v(" "),a("p",[t._v("When you assign an object literal to a variable or pass it as an argument to a function,it undergoes excess property checking.")]),t._v(" "),a("p",[t._v("TS会根据这个对象字面量生成一个新鲜对象字面量类型(Fresh Object Literal Type),与变量类型进行比较。")]),t._v(" "),a("p",[t._v("因为是新鲜对象字面量类型，所以可以通过一个中间变量绕过去")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Point")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  x"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  y"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 中间变量")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" tmp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  x"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  y"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  z"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" point"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("Point"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tmp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不报错")]),t._v("\n")])])]),a("h3",{attrs:{id:"_12-apply-types-to-entire-function-expressions-when-possible"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-apply-types-to-entire-function-expressions-when-possible"}},[t._v("#")]),t._v(" 12. Apply Types to Entire Function Expressions When Possible")]),t._v(" "),a("p",[t._v("一个典型例子是React开发函数式组件，官方提供React.FC类型，开发时写函数表达式。")]),t._v(" "),a("h3",{attrs:{id:"_13-know-the-differences-between-type-and-interface"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-know-the-differences-between-type-and-interface"}},[t._v("#")]),t._v(" 13. Know the Differences Between type and interface")]),t._v(" "),a("p",[t._v("inteface无法应用于union type | intersection type | mapped type | conditional type | tuple")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AorB")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'A'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'B'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NamedVariable")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Input "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Output"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("IS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("U")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("U")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pair")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("p",[t._v("interface 可以augumented(合并),而type不可以")]),t._v(" "),a("h3",{attrs:{id:"_14-use-type-operations-and-generics-to-avoid-repeating-yourself"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_14-use-type-operations-and-generics-to-avoid-repeating-yourself"}},[t._v("#")]),t._v(" 14. Use Type Operations and Generics to Avoid Repeating Yourself")]),t._v(" "),a("p",[t._v("DRY原则的类型版本。通过extends/intersection type/union type/ keyof / typeof / mapped type / generic type 等操作减少重复")]),t._v(" "),a("h3",{attrs:{id:"_15-use-index-signatures-for-dynamic-data"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_15-use-index-signatures-for-dynamic-data"}},[t._v("#")]),t._v(" 15. Use Index Signatures for Dynamic Data")]),t._v(" "),a("p",[t._v("一般无法提前约定，只能在runtime获取的属性，采用索引签名进行建模。其他情况能用更精准类型就用更精准类型。")]),t._v(" "),a("h3",{attrs:{id:"_16-prefer-arrays-tuples-and-arraylike-to-number-index-signatures"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_16-prefer-arrays-tuples-and-arraylike-to-number-index-signatures"}},[t._v("#")]),t._v(" 16. Prefer Arrays, Tuples, and ArrayLike to number Index Signatures")]),t._v(" "),a("p",[t._v("数组实际上是对象，其keys也是string而非number，Typescript里使用number index signature是为了进行更多的类型检查 即使如下代码x[0]和x[‘0’]的行为在运行时完全一致，但是只有x[0]才能正确的推导出类型。")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// x类型为string")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 但是y类型为any")]),t._v("\n")])])]),a("p",[t._v("一般也很少用number index signatures，用Array或者Tuple")]),t._v(" "),a("h3",{attrs:{id:"_17-use-readonly-to-avoid-errors-associated-with-mutation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_17-use-readonly-to-avoid-errors-associated-with-mutation"}},[t._v("#")]),t._v(" 17. Use readonly to Avoid Errors Associated with Mutation")]),t._v(" "),a("ul",[a("li",[t._v("If your function does not modify its parameters then declare them readonly.This makes its contract clearer and prevents inadvertent mutations in its implementation.")]),t._v(" "),a("li",[t._v("Use readonly to prevent errors with mutation and to find the places in your code where mutations occur.")])]),t._v(" "),a("h3",{attrs:{id:"_18-use-mapped-types-to-keep-values-in-sync"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_18-use-mapped-types-to-keep-values-in-sync"}},[t._v("#")]),t._v(" 18. Use Mapped Types to keep Values in Sync")]),t._v(" "),a("ul",[a("li",[t._v("Use mapped types to keep related values and types synchronized.")]),t._v(" "),a("li",[t._v("Consider using mapped types to force choices when adding new properties to an interface.")])]),t._v(" "),a("h2",{attrs:{id:"type-inference"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#type-inference"}},[t._v("#")]),t._v(" Type Inference")]),t._v(" "),a("h3",{attrs:{id:"_19-avoid-cluttering-your-code-with-inferable-types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_19-avoid-cluttering-your-code-with-inferable-types"}},[t._v("#")]),t._v(" 19. Avoid Cluttering Your Code with Inferable Types")]),t._v(" "),a("p",[t._v("避免对简单的可推导类型进行标注，TypeScript可以自动推导,而且后期改动的时候要改的地方也少。")]),t._v(" "),a("p",[t._v("常见的需要手动标注类型的场景：")]),t._v(" "),a("ul",[a("li",[t._v("函数参数和返回值类型。(ts规则 noImplicitAny 参数需要标注，不能有隐式any； eslint规则 explicit-function-return-type 函数需要标明返回值类型 )")]),t._v(" "),a("li",[t._v("对象字面量(抽出interface利于复用，还可以辅助检查拼写错误(新鲜对象字面量类型) )，空数组(默认是 any[])")])]),t._v(" "),a("h3",{attrs:{id:"_20-use-different-variables-for-different-types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_20-use-different-variables-for-different-types"}},[t._v("#")]),t._v(" 20. Use Different Variables for Different Types")]),t._v(" "),a("p",[t._v("在JavaScript中可以把不同类型的值赋给同一个变量，这是一个非常坏的习惯。")]),t._v(" "),a("ul",[a("li",[t._v("变量值改变，类型尽可能不变。")]),t._v(" "),a("li",[t._v("不同类型的值应该赋给不同的变量。")])]),t._v(" "),a("h3",{attrs:{id:"_21-understand-type-widening"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_21-understand-type-widening"}},[t._v("#")]),t._v(" 21. Understand Type Widening")]),t._v(" "),a("p",[t._v("当使用一个常量初始化变量但是没有声明类型时，TS需要根据初始值决定类型，决定的类型通常会比常量类型要宽。比如"),a("code",[t._v("let a = 1")]),t._v("，TS认为a的类型时number，而初始值的类型是1。")]),t._v(" "),a("p",[t._v("通常限制类型断定宽化有这么几种方式：")]),t._v(" "),a("ul",[a("li",[t._v("使用const声明变量")]),t._v(" "),a("li",[t._v("声明类型")]),t._v(" "),a("li",[t._v("使用const断言")])]),t._v(" "),a("h3",{attrs:{id:"_22-understand-type-narrowing"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_22-understand-type-narrowing"}},[t._v("#")]),t._v(" 22. Understand Type Narrowing")]),t._v(" "),a("p",[t._v("通常类型收窄是我们主动编码的结果，有以下常见方式：")]),t._v(" "),a("ul",[a("li",[t._v("条件判断if typeof in instanceof 相等判断 不相等判断")]),t._v(" "),a("li",[t._v("可辨识联合类型 (通过 可辨识字段)")]),t._v(" "),a("li",[t._v("自定义类型守卫 (返回类型 x is y)")])]),t._v(" "),a("h3",{attrs:{id:"_23-create-objects-all-at-once"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_23-create-objects-all-at-once"}},[t._v("#")]),t._v(" 23. Create Objects All at Once")]),t._v(" "),a("p",[t._v("定义一个对象时，尽可能一次性把属性声明完，这样对于TS类型推导有利，动态加属性 TS可能会报错。")]),t._v(" "),a("p",[t._v("如果需要动态加属性，推荐使用spread operator：")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ab "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("对于条件性添加属性，为了类型安全，可以在null或者{}上使用spread operator。")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" hasMiddle "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("random")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" firstLast "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("first"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'First'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("last"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'last'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("firstLast"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hasMiddle"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("middle"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'M'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("name此时的类型为：")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("name")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    first"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    last"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    first"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    last"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    middle"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("然而想要的是middle可选而不是联合类型")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 处理可选类型")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token generic-function"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addOptional")]),a("span",{pre:!0,attrs:{class:"token generic class-name"}},[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("U")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" object"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("U")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" Partial"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("U")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addOptional")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("firstLast"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("hasMiddle"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("middle"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'M'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"_24-be-consistent-in-your-use-of-aliases"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_24-be-consistent-in-your-use-of-aliases"}},[t._v("#")]),t._v(" 24. Be Consistent in Your Use of Aliases")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Whatever")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    str"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("Whatever "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    str"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'meow'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// str 是 obj.str的别名")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// obj.str 现在是string类型")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// str 是 string | undefined类型")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这就是为什么当使用别名和类型收窄时 别名要一致")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("在TS 4.6对控制流分析做了优化")]),t._v(" "),a("h3",{attrs:{id:"_25-use-async-functions-instead-of-callbacks-for-asynchronous-code"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_25-use-async-functions-instead-of-callbacks-for-asynchronous-code"}},[t._v("#")]),t._v(" 25. Use async Functions Instead of Callbacks for Asynchronous Code")]),t._v(" "),a("h3",{attrs:{id:"_26-understand-how-context-is-used-in-type-inference"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_26-understand-how-context-is-used-in-type-inference"}},[t._v("#")]),t._v(" 26. Understand How Context Is Used in Type Inference")]),t._v(" "),a("p",[t._v("类型推断和上下文有关。一般而言，TS推断变量的类型是根据变量被引入时，而不是使用时，通常伴随着之前的Type Widening现象。")]),t._v(" "),a("h3",{attrs:{id:"_27-use-functional-constructs-and-libraries-to-help-types-flow"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_27-use-functional-constructs-and-libraries-to-help-types-flow"}},[t._v("#")]),t._v(" 27. Use Functional Constructs and Libraries to Help Types Flow")]),t._v(" "),a("h2",{attrs:{id:"type-design"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#type-design"}},[t._v("#")]),t._v(" Type Design")]),t._v(" "),a("h3",{attrs:{id:"_28-prefer-types-that-always-represent-valid-states"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_28-prefer-types-that-always-represent-valid-states"}},[t._v("#")]),t._v(" 28. Prefer Types That Always Represent Valid States")]),t._v(" "),a("p",[t._v("避免使用一个类型多个变量建模状态，用可辨识的多个类型联合建模状态。")]),t._v(" "),a("h3",{attrs:{id:"_29-be-liberal-in-what-you-accept-and-strict-in-what-you-produce"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_29-be-liberal-in-what-you-accept-and-strict-in-what-you-produce"}},[t._v("#")]),t._v(" 29. Be Liberal in What You Accept and Strict in What You Produce")]),t._v(" "),a("p",[t._v("对入参宽松(支持多种类型参数)，对出参严格(统一格式)")]),t._v(" "),a("h3",{attrs:{id:"_30-don-t-repeat-type-infomation-in-document"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_30-don-t-repeat-type-infomation-in-document"}},[t._v("#")]),t._v(" 30. Don't Repeat Type Infomation in Document")]),t._v(" "),a("h3",{attrs:{id:"_31-push-null-values-to-the-perimeter-of-your-type"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_31-push-null-values-to-the-perimeter-of-your-type"}},[t._v("#")]),t._v(" 31. Push Null Values to the Perimeter of Your Type")]),t._v(" "),a("ul",[a("li",[t._v("Avoid designs in which one value being null or not null is implicitly related to another value being null or not null")]),t._v(" "),a("li",[t._v("Push null values to the perimeter of your API by making larger objects either null or fully non-null. This will make code clearer both for human readers and for the type checker.")]),t._v(" "),a("li",[t._v("Consider creating a fully non-null class and constructing it when all values are available.")])]),t._v(" "),a("h3",{attrs:{id:"_32-prefer-unions-of-interfaces-to-interfaces-of-unions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_32-prefer-unions-of-interfaces-to-interfaces-of-unions"}},[t._v("#")]),t._v(" 32. Prefer Unions of Interfaces to Interfaces of Unions")]),t._v(" "),a("p",[t._v("考虑下述类型定义")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Layer")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  layout"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" FillLayout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" LineLayout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" PointLayout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  paint"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" FillPaint "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" LinePaint "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" PointPaint\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("这样设计的类型很难关联layout和对应的paint,重构如下")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FillLayer")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fill'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  layout"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" FillLayout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  paint"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" FillPaint\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LineLayer")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'line'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  layout"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" LineLayout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  paint"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" LinePaint\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PointLayer")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'paint'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  layout"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" PointLayout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  paint"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" PointPaint\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Layer")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" FillLayer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" LineLayer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("PointLayer\n")])])]),a("p",[t._v("和28类似，都是使用可辨识联合类型，处理有关联的多个字段。")]),t._v(" "),a("h3",{attrs:{id:"_33-prefer-more-precise-alternatives-to-string-types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_33-prefer-more-precise-alternatives-to-string-types"}},[t._v("#")]),t._v(" 33. Prefer More Precise Alternatives to String Types")]),t._v(" "),a("h3",{attrs:{id:"_34-prefer-incomplete-types-to-inaccurate-types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_34-prefer-incomplete-types-to-inaccurate-types"}},[t._v("#")]),t._v(" 34. Prefer Incomplete Types to Inaccurate Types")]),t._v(" "),a("h3",{attrs:{id:"_35-generate-types-from-apis-and-specs-not-data"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_35-generate-types-from-apis-and-specs-not-data"}},[t._v("#")]),t._v(" 35. Generate Types from APIs and Specs, Not Data")]),t._v(" "),a("h3",{attrs:{id:"_36-name-types-using-the-language-of-your-problem-domain"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_36-name-types-using-the-language-of-your-problem-domain"}},[t._v("#")]),t._v(" 36. Name Types Using the Language of Your Problem Domain")]),t._v(" "),a("h3",{attrs:{id:"_37-consider-brands-for-norminal-typing"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_37-consider-brands-for-norminal-typing"}},[t._v("#")]),t._v(' 37. Consider "Brands" for Norminal Typing')]),t._v(" "),a("p",[t._v("TS时结构化类型而不是名义类型，模拟名义类型可以参考"),a("a",{attrs:{href:"https://react-typescript-cheatsheet.netlify.app/docs/basic/troubleshooting/types/#simulating-nominal-types",target:"_blank",rel:"noopener noreferrer"}},[t._v("Simulating Nominal Types"),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OrderID")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("readonly")]),t._v(" brand"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" unique "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("symbol")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserID")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("readonly")]),t._v(" brand"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" unique "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("symbol")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ID")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" OrderID "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" UserID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OrderID")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" id "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" OrderID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("UserID")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" id "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" UserID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("queryForUser")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" UserID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("queryForUser")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OrderID")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foobar"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Error, Argument of type 'OrderID' is not assignable to parameter of type 'UserID'")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"working-with-any"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#working-with-any"}},[t._v("#")]),t._v(" Working with any")]),t._v(" "),a("h3",{attrs:{id:"_38-use-the-narrowest-possible-scope-for-any-types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_38-use-the-narrowest-possible-scope-for-any-types"}},[t._v("#")]),t._v(" 38. Use the Narrowest Possible Scope for any Types")]),t._v(" "),a("p",[t._v("尽可能缩小any的影响范围：")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("expressionReturningFoo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不建议,后续的x都是any了 如果f1返回x any会影响到其他函数")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("processBar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("expressionReturningFoo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("processBar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 建议，只有这里是any 后续x依然是Foo类型")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("p",[t._v("对于对象：")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" config1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("Config "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  b"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  c"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    key"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 缺少foo属性")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不推荐 因为只想不处理c属性，其他的属性还要类型校验")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" config2"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("Config "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  b"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  c"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    key"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 推荐 any范围限于c")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"_39-prefer-more-precise-variants-of-any-to-plain-any"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_39-prefer-more-precise-variants-of-any-to-plain-any"}},[t._v("#")]),t._v(" 39. Prefer More Precise Variants of any to Plain any")]),t._v(" "),a("p",[t._v("虽说用any，也要有个下限。比如知道是数组，可是使用"),a("code",[t._v("any[]")]),t._v("；知道是对象，可以使用"),a("code",[t._v("{[x:string]:any}")]),t._v("；知道是函数，可以使用"),a("code",[t._v("(...args:any[])=>any")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"_40-hide-unsafe-type-assertions-in-well-typed-functions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_40-hide-unsafe-type-assertions-in-well-typed-functions"}},[t._v("#")]),t._v(" 40. Hide Unsafe Type Assertions in Well-Typed Functions")]),t._v(" "),a("p",[t._v("有时候不使用any想编写一个完全类型安全的实现并非易事，但是一般对于使用者 并不关心内部的实现是否安全，只关心对外暴露的签名是否安全，此时我们可以将函数签名和 函数实现相分离，以简化内部的类型实现。")]),t._v(" "),a("h3",{attrs:{id:"_41-understand-evolving-any"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_41-understand-evolving-any"}},[t._v("#")]),t._v(" 41. Understand Evolving any")]),t._v(" "),a("p",[t._v("Typescript中的any并不是一成不变的，会随着用户的操作，Typescript会猜测更加合理的类型")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("range")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("start"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("limit"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" out "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// any[]")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("limit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// number[]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("range2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("start"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("limit"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" out "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// any[]")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("start "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" limit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" out "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// any[]")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("limit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// number[]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("然而最好还是必要的时候明确的声明")]),t._v(" "),a("h3",{attrs:{id:"_42-use-unknown-instead-of-any-for-values-with-an-unknown-type"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_42-use-unknown-instead-of-any-for-values-with-an-unknown-type"}},[t._v("#")]),t._v(" 42. Use unknown Instead of any for Values with an Unknown Type")]),t._v(" "),a("ul",[a("li",[t._v("The unknown type is a type-safe alternative to any. Use it when you know you have a value but do not know what its type is.")]),t._v(" "),a("li",[t._v("Use unknown to force your users to use a type assertion or do type checking.")])]),t._v(" "),a("h3",{attrs:{id:"_43-prefer-type-safe-approaches-to-monkey-patching"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_43-prefer-type-safe-approaches-to-monkey-patching"}},[t._v("#")]),t._v(" 43.Prefer Type-Safe Approaches to Monkey Patching")]),t._v(" "),a("ul",[a("li",[t._v("Prefer structured code to storing data in globals or on the DOM")]),t._v(" "),a("li",[t._v("If you must store data on built-in types,use one of the type-safe approaches (augmentation or asserting a custom interface)")])]),t._v(" "),a("h3",{attrs:{id:"_44-track-your-type-coverage-to-prevent-regressions-in-type-safety"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_44-track-your-type-coverage-to-prevent-regressions-in-type-safety"}},[t._v("#")]),t._v(" 44. Track Your Type Coverage to Prevent Regressions in Type Safety")]),t._v(" "),a("h2",{attrs:{id:"types-declarations-and-types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#types-declarations-and-types"}},[t._v("#")]),t._v(" Types Declarations and @types")]),t._v(" "),a("h3",{attrs:{id:"_45-put-typescript-and-types-in-devdependencies"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_45-put-typescript-and-types-in-devdependencies"}},[t._v("#")]),t._v(" 45. Put TypeScript and @types in devDependencies")]),t._v(" "),a("h3",{attrs:{id:"_46-understand-the-three-versions-involved-in-type-declarations"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_46-understand-the-three-versions-involved-in-type-declarations"}},[t._v("#")]),t._v(" 46. Understand the Three Versions Involved in Type Declarations")]),t._v(" "),a("p",[t._v("一个库的类型声明和三个库的版本有关：库本身版本，@types版本，TypeScript版本，这三个版本不匹配可能会导致一些问题。")]),t._v(" "),a("p",[t._v("用TS开发，库本身就导出类型，可以减少一个变量。")]),t._v(" "),a("h3",{attrs:{id:"_47-export-all-types-that-appear-in-public-apis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_47-export-all-types-that-appear-in-public-apis"}},[t._v("#")]),t._v(" 47. Export All Types That Appear in Public APIs")]),t._v(" "),a("p",[t._v("将公用API里使用的类型也一并导出，方便其他人使用。即使不导出，其他用户也可以使用ReturnType Parameters获取。")]),t._v(" "),a("h3",{attrs:{id:"_48-use-tsdoc-for-api-comments"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_48-use-tsdoc-for-api-comments"}},[t._v("#")]),t._v(" 48. Use TSDoc for API Comments")]),t._v(" "),a("h3",{attrs:{id:"_49-provide-a-type-for-this-in-callbacks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_49-provide-a-type-for-this-in-callbacks"}},[t._v("#")]),t._v(" 49. Provide a Type for this in Callbacks")]),t._v(" "),a("h3",{attrs:{id:"_50-prefer-conditional-types-to-overloaded-declarations"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_50-prefer-conditional-types-to-overloaded-declarations"}},[t._v("#")]),t._v(" 50. Prefer Conditional Types to Overloaded Declarations")]),t._v(" "),a("p",[t._v("下面的例子，用条件类型比用函数重载更简介(我也不喜欢用函数重载)")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token generic-function"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("double")]),a("span",{pre:!0,attrs:{class:"token generic class-name"}},[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("val"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" val"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"_51-mirror-types-to-server-dependencies"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_51-mirror-types-to-server-dependencies"}},[t._v("#")]),t._v(" 51. Mirror Types to Server Dependencies")]),t._v(" "),a("p",[t._v("尽量避免用户对@types的依赖，不要强制web用户依赖NodeJS的types")]),t._v(" "),a("h3",{attrs:{id:"_52-be-aware-of-the-pitfalls-of-testing-types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_52-be-aware-of-the-pitfalls-of-testing-types"}},[t._v("#")]),t._v(" 52. Be Aware of the Pitfalls of Testing Types")]),t._v(" "),a("p",[t._v("然而一般写业务也不用测试类型啊🤔")]),t._v(" "),a("h2",{attrs:{id:"writing-and-running-your-code"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#writing-and-running-your-code"}},[t._v("#")]),t._v(" Writing and Running Your Code")]),t._v(" "),a("h3",{attrs:{id:"_53-prefer-ecmascript-features-to-typescript-features"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_53-prefer-ecmascript-features-to-typescript-features"}},[t._v("#")]),t._v(" 53. Prefer ECMAScript Features to TypeScript Features")]),t._v(" "),a("p",[t._v("优先考虑使用ES特性而不是TS独有特性，把TS定位在Type层面")]),t._v(" "),a("ul",[a("li",[t._v("Enums 实际上枚举用的不多，一般是用字面量的联合类型替代")]),t._v(" "),a("li",[t._v("Parameter Properties 给类constructor的参数提供修饰符 这些参数会自动挂载到同名属性上。这个feature其实有点鸡肋，而且现在class语法本身用的就不多了")]),t._v(" "),a("li",[t._v("Namespace and Triple-Slash Imports 这两个是ES没提出模块方案前的替代品，没有使用意义了")]),t._v(" "),a("li",[t._v("Decorators 装饰器的最大问题其实是他还不稳定")])]),t._v(" "),a("h3",{attrs:{id:"_54-know-how-to-iterate-over-objects"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_54-know-how-to-iterate-over-objects"}},[t._v("#")]),t._v(" 54. Know How to Iterate Over Objects")]),t._v(" "),a("p",[t._v("使用for k in obj语法遍历对象，k的类型被放宽到string，这是因为TS是结构化类型，对于某个可赋值给某个类型的变量，可能会有额外属性，所以k要放宽。")]),t._v(" "),a("p",[t._v("Object.entries 是一个可行的替代，然而类型还是有问题。。。")]),t._v(" "),a("h3",{attrs:{id:"_55-understand-the-dom-hierarchy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_55-understand-the-dom-hierarchy"}},[t._v("#")]),t._v(" 55. Understand the DOM hierarchy")]),t._v(" "),a("p",[t._v("Know the dofferences between Node,Element,HTMLElement,and EventTarget as well as those between Event and MouseEvent.")]),t._v(" "),a("p",[t._v("Either use a specific enough type for DOM elements and Events in your code or give TypeScript the context to infer it.")]),t._v(" "),a("h3",{attrs:{id:"_56-dont-t-rely-on-private-to-hide-infomation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_56-dont-t-rely-on-private-to-hide-infomation"}},[t._v("#")]),t._v(" 56. Dont`t Rely on Private to Hide Infomation")]),t._v(" "),a("p",[t._v("TS class的private protected 修饰符本身只是类型层面的，不存在于运行时，显然标记为私有的字段依然可以在运行时从外部访问。")]),t._v(" "),a("p",[t._v("private field是ES提出的私有字段解决方案(然而#语法好丑)")]),t._v(" "),a("h3",{attrs:{id:"_57-use-source-maps-to-debug-typescript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_57-use-source-maps-to-debug-typescript"}},[t._v("#")]),t._v(" 57. Use Source Maps to Debug TypeScript")]),t._v(" "),a("h2",{attrs:{id:"migrating-to-typescript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#migrating-to-typescript"}},[t._v("#")]),t._v(" Migrating to TypeScript")]),t._v(" "),a("h3",{attrs:{id:"_58-write-modern-javascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_58-write-modern-javascript"}},[t._v("#")]),t._v(" 58. Write Modern JavaScript")]),t._v(" "),a("h3",{attrs:{id:"_59-use-ts-check-and-jsdoc-to-experiment-with-typescript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_59-use-ts-check-and-jsdoc-to-experiment-with-typescript"}},[t._v("#")]),t._v(" 59. Use @ts-check and JSDoc to Experiment with TypeScript")]),t._v(" "),a("h3",{attrs:{id:"_60-use-allowjs-to-mix-typescript-and-javascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_60-use-allowjs-to-mix-typescript-and-javascript"}},[t._v("#")]),t._v(" 60. Use allowJs to Mix TypeScript and JavaScript")]),t._v(" "),a("h3",{attrs:{id:"_61-convert-module-by-module-up-your-depency-graph"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_61-convert-module-by-module-up-your-depency-graph"}},[t._v("#")]),t._v(" 61. Convert Module By Module Up Your Depency Graph")]),t._v(" "),a("h3",{attrs:{id:"_62-dont-t-consider-migration-complete-until-you-enable-noimplicitany"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_62-dont-t-consider-migration-complete-until-you-enable-noimplicitany"}},[t._v("#")]),t._v(" 62. Dont`t Consider Migration Complete Until You Enable noImplicitAny")])])}),[],!1,null,null,null);s.default=n.exports}}]);