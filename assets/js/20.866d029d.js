(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{408:function(t,e,n){t.exports=n.p+"assets/img/typeOfExitPoints.f15484c9.png"},535:function(t,e,n){"use strict";n.r(e);var o=n(42),s=Object(o.a)({},(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h1",{attrs:{id:"the-art-of-unit-testing"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#the-art-of-unit-testing"}},[t._v("#")]),t._v(" "),o("a",{attrs:{href:"https://book.douban.com/subject/34944396/",target:"_blank",rel:"noopener noreferrer"}},[t._v("The Art of Unit Testing"),o("OutboundLink")],1)]),t._v(" "),o("h2",{attrs:{id:"the-basics-of-unit-testing"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#the-basics-of-unit-testing"}},[t._v("#")]),t._v(" The basics of unit testing")]),t._v(" "),o("p",[o("img",{attrs:{src:n(408),alt:"Types of exit points"}})]),t._v(" "),o("p",[t._v("Three types of exist points:")]),t._v(" "),o("ul",[o("li",[t._v("return value。 这种最好做测试，只需要对返回值做断言")]),t._v(" "),o("li",[t._v("state change。 比如一个class内部状态变化，可以调用getter方法观测到，也比较好测试")]),t._v(" "),o("li",[t._v("call third-party dependency。 这种需要破除依赖才能测试。")])]),t._v(" "),o("p",[t._v("关于dependency, 作者是这么定义的：")]),t._v(" "),o("blockquote",[o("p",[t._v("A dependency is something we don't have full control over during a unit test. Or it can be something that trying to control in a test world make our lives miserable.")])]),t._v(" "),o("p",[t._v("和"),o("a",{attrs:{href:"https://book.douban.com/subject/34429421/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Unit Testing"),o("OutboundLink")],1),t._v("的定义比较，shared/out-of-process dependency 属于我们不能完全控制的，而 mutable private dependency 一部分属于这个 "),o("strong",[t._v("something trying to control in a test world make our lives miserable")]),t._v(" 。这句话其实很暧昧。对于作者属于哪个school也有点模糊，早期作者应该是London School，因为认为一个method是一个unit，现在有点倾向于 Classic School。他这个unit of work 范围很广，既可以包含一个method，也可以是多个component的组合。")]),t._v(" "),o("p",[t._v("关于 Integration Testing，作者是这么定义的:")]),t._v(" "),o("blockquote",[o("p",[t._v("Integration testing is just unit testing with some or all of the dependencies being real and residing out of the current execution process.")])]),t._v(" "),o("p",[t._v("这个就比较倾向于 Classic School 的界定了。")])])}),[],!1,null,null,null);e.default=s.exports}}]);